/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ustadmobile.port.j2me.view.exequizsupport;

import com.sun.lwuit.html.HTMLComponent;
import com.sun.lwuit.html.HTMLElement;
import com.ustadmobile.port.j2me.view.ContainerViewHTMLCallback;
import java.util.Vector;

/**
 * Represents a Quiz Idevice element created using eXeLearning
 * 
 * @author mike
 */
public class EXEQuizIdevice {
    Vector questions;
    
    private HTMLComponent htmlC;
    
    private String id;
    
    public EXEQuizIdevice(HTMLElement ideviceEl, HTMLComponent htmlC) {
        this.htmlC = htmlC;
        setupFromElement(ideviceEl);
    }
    
    public String getID() {
        return id;
    }
    
    public void setupFromElement(HTMLElement ideviceEl) {
        id = ideviceEl.getAttributeById(HTMLElement.ATTR_ID);
        questions = new Vector();
        
        //eXeLearning makes id="id20" etc. - chop the id prefix off
        if(id.startsWith("id")) {
            id = id.substring(2);
        }
        
        //First look for the forms that are generated by eXeLearning for each question
        Vector questionForms = ideviceEl.getDescendantsByClass("activity-form", 
                ContainerViewHTMLCallback.MCQ_FORM_TAGIDS);
        Vector forms = ideviceEl.getDescendantsByTagId(ContainerViewHTMLCallback.MCQ_FORM_TAGIDS[0]);
        HTMLElement currentEl;
        String currentName;
        EXEQuizQuestion currentQuestion;
        for(int i = 0; i < questionForms.size(); i++) {
            currentEl = (HTMLElement)questionForms.elementAt(i);
            currentName = currentEl.getAttributeById(HTMLElement.ATTR_NAME);
            
            if(currentName != null && currentName.startsWith(EXEQuizQuestion.PREFIX_FORMNAME)) {
                // we have found the question form itself
                currentQuestion = new EXEQuizQuestion(currentEl, htmlC);
                questions.addElement(currentQuestion);
            }
        }
    }
    
    public boolean handleSelectAnswer(HTMLElement inputElement) {
        //In eXeLearning the questionID comes immediately after the option in name
        //e.g. "option20_67" MCQ ID = 20_67
        String questionID  = 
            inputElement.getAttributeById(HTMLElement.ATTR_NAME).substring(6);
        EXEQuizQuestion question = getQuestionById(questionID);
        if(question != null) {
            return question.handleSelectAnswer(inputElement);
        }else {
            return false;
        }
    }
    
    public EXEQuizQuestion getQuestionById(String id) {
        EXEQuizQuestion currentQ;
        for(int i = 0; i < questions.size(); i++) {
            currentQ = (EXEQuizQuestion)questions.elementAt(i);
            if(currentQ.getID().equals(id)) {
                return currentQ;
            }
        }
        
        return null;
    }
    
}
