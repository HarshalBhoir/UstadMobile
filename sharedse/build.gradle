
buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }

        mavenCentral()
    }

    dependencies {
        // classpath "gradle.plugin.de.fuerstenau:BuildConfigPlugin:$version_gradle_buildconfig_plugin"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$version_kotlin"
    }
}

apply plugin: "kotlin-multiplatform"
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.android.library'
apply plugin: 'jacoco'
apply plugin: "maven-publish"
//apply plugin: "de.fuerstenau.buildconfig"


repositories {
    mavenCentral()
    maven {
        url "http://devserver2.ustadmobile.com/repo-mvn"
    }
}

android {
    compileSdkVersion rootProject.ext.version_android_compile_sdk
    buildToolsVersion rootProject.ext.version_android_buildtools

    defaultConfig {
        minSdkVersion rootProject.ext.version_android_min_sdk
        targetSdkVersion rootProject.ext.version_android_target_sdk
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}


/*
 * Added to overcome limitation on Android studio as per:
 *  http://tools.android.com/knownissues#TOC-JUnit-tests-missing-resources-in-classpath-when-run-from-Studio
 */
/*task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    from "${projectDir}/../sharedse-tests/src/main/resources"
    into "${buildDir}/classes/test"
}
processTestResources.dependsOn copyTestResources */

kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.android, 'android')
    }

    jvm {
        compilations.main.kotlinOptions {
            // Setup the Kotlin compiler options for the 'main' compilation:
            jvmTarget = "$version_kotlin_jvmTarget"
        }
    }


    sourceSets {
        commonMain {
            dependencies {
                implementation project(":core")
                implementation project(":lib-door-runtime")
                implementation project(":lib-util")

                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$version_kotlin"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$version_coroutines"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$version_kotlinx_serialization"
                implementation "com.ustadmobile.kmpxmlpullparser:KMPXmlPullParser-metadata:$version_kmp"


                compileOnly project(":lib-database")
                compileOnly project(":lib-room-annotations")
                compileOnly project(':lib-database-entities')
            }
        }

        /*
         Normally we would add a sourceSet and then use dependsOn. Unfortunately this does not
         work when running unit tests in the IDE.
         */
        androidMain {
            kotlin.srcDir("src/commonJvmMain/kotlin")

            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutines"
                implementation "android.arch.lifecycle:extensions:$version_android_lifecycle"
                implementation "com.ustadmobile.kmpxmlpullparser:KMPXmlPullParser-jvm:$version_kmp"


                //Begin SharedSE Android and JVM dependencies
                implementation "org.nanohttpd:nanohttpd:$version_nanohttpd"
                implementation "org.nanohttpd:nanohttpd-nanolets:$version_nanohttpd"
                implementation "com.squareup.okhttp3:okhttp:$version_okhttp"
                implementation "net.sf.kxml:kxml2:$version_kxml"
                implementation "com.google.code.gson:gson:$version_gson"
                implementation "net.lingala.zip4j:zip4j:$version_zip4j"

                implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
                implementation "com.squareup.retrofit2:converter-gson:$version_retrofit"
                implementation "com.squareup.retrofit2:converter-scalars:$version_retrofit"
                //end SharedSE Android and JVM dependencies
            }
        }

        jvmMain {
            kotlin.srcDir("src/commonJvmMain/kotlin")

            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"

                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines"
                implementation "com.ustadmobile.kmpxmlpullparser:KMPXmlPullParser-jvm:$version_kmp"

                //Begin Android and JVM dependencies
                implementation "org.nanohttpd:nanohttpd:$version_nanohttpd"
                implementation "org.nanohttpd:nanohttpd-nanolets:$version_nanohttpd"
                implementation "com.squareup.okhttp3:okhttp:$version_okhttp"
                implementation "net.sf.kxml:kxml2:$version_kxml"
                implementation "com.google.code.gson:gson:$version_gson"
                implementation "net.lingala.zip4j:zip4j:$version_zip4j"

                implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
                implementation "com.squareup.retrofit2:converter-gson:$version_retrofit"
                implementation "com.squareup.retrofit2:converter-scalars:$version_retrofit"
                //end Android and JVM dependencies
            }
        }


    }

}


publishing {
    publications {
        maven(MavenPublication) {
            groupId rootProject.group
            artifactId project.name
            version rootProject.version
        }
    }

    repositories {
        maven {
            url rootProject.ext.buildConfigProperties['repo.dir']
        }
    }
}
