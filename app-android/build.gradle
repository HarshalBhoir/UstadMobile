
//As Per https://developer.android.com/studio/publish/app-signing.html#release-mode
def keyStorePropertiesExists = rootProject.file("keystore.properties").exists()
def keystoreProperties = new Properties()

if(keyStorePropertiesExists) {
    keystoreProperties.load(new FileInputStream(rootProject.file("keystore.properties")))
}

apply plugin: 'com.android.application'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
    }
}

repositories {
    mavenCentral()

    maven {
        url "/Volumes/ImportantWorks/ustadmobile/repo"
    }

    maven {
        url "http://devserver2.ustadmobile.com/repo-mvn"
    }

}


android {
    signingConfigs {
        release {
            keyAlias keyStorePropertiesExists ? keystoreProperties['keyAlias'] : "default"
            keyPassword keyStorePropertiesExists ? keystoreProperties['keyPassword'] : "default"
            storeFile keyStorePropertiesExists ? file(keystoreProperties['storeFile']) : new File("keystore.ks")
            storePassword keyStorePropertiesExists ? keystoreProperties['storePassword'] : "default"
        }
    }

    lintOptions {
        abortOnError false
    }

    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.toughra.ustadmobile"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 90
        versionName "0.2.4.21"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "long", "TIMESTAMP", System.currentTimeMillis() + "L"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }


}

dependencies {
    compile 'com.ustadmobile.qrcodelibomrfork:qrcode-core:1.0-SNAPSHOT'
    compile project(':core')
    compile project(':sharedse')
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support:cardview-v7:25.1.0'
    compile 'com.android.support:design:25.1.0'
    compile 'com.android.support:support-v4:25.1.0'
    compile 'com.joanzapata.pdfview:android-pdfview:1.0.4@aar'
    compile 'com.ustadmobile.nanolrs:nanolrs-core:0.1.37'
    compile 'com.ustadmobile.nanolrs:nanolrs-android:0.1.37'
    compile 'com.github.clans:fab:1.6.4'
    compile 'com.ustadmobile.wifibuddy:wifibuddy:1.1.7-SNAPSHOT'
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support:support-annotations:25.1.0'
    androidTestCompile 'com.android.support.test:rules:0.5'
    testCompile 'org.mockito:mockito-core:1.10.19'

}


task broadcast(type: Exec) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def sdkPath = properties.getProperty('sdk.dir')
    def adb = sdkPath+"/platform-tools/adb"
    if(project.hasProperty("broadcast")) {
        commandLine "$adb",'-s', (String)project.property("broadcast"), 'shell','am','instrument','-w', '-r','-e','debug','false','-e','class com.toughra.ustadmobile.p2p.ServiceBroadcastTest com.toughra.ustadmobile.test/android.support.test.runner.AndroidJUnitRunner'
    }

}



task discover(type: Exec) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def sdkPath = properties.getProperty('sdk.dir')
    def adb = sdkPath+"/platform-tools/adb"
    if(project.hasProperty("discover")) {
        commandLine "$adb",'-s', (String)project.property("discover"), 'shell','am','instrument','-w', '-r','-e','debug','false','-e','class com.toughra.ustadmobile.p2p.DiscoverAndDownloadTest com.toughra.ustadmobile.test/android.support.test.runner.AndroidJUnitRunner'
    }
}

task runTask(type: Exec){
    commandLine './','task.sh','9b05d221','AMVKOVGQ8PRSLZYP'
}




