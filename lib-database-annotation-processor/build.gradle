plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.multiplatform'
    id "org.jetbrains.kotlin.kapt"
    id 'maven-publish'
}

kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm')
    }

    sourceSets {
        jvmMain {
            dependencies {
                implementation project(":lib-database-annotations")
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
                implementation project(':lib-database-runtime')
                implementation project(":lib-door-runtime")
                implementation project(':lib-database-runtime-jdbc')
                implementation project(":lib-util")
                implementation project(":lib-room-annotations")

                implementation "com.squareup:javapoet:$version_javapoet"
                implementation "com.squareup:kotlinpoet:1.2.0"

                implementation "com.github.jsqlparser:jsqlparser:$version_jsqlparser"
                implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
                implementation "org.apache.commons:commons-text:$version_apache_commons_text"
                implementation "org.jetbrains.kotlin:kotlin-stdlib:$version_kotlin"

                //SQLite dependencies
                implementation "com.github.h-thurow:simple-jndi:$version_simple_jndi"
                implementation "org.apache.commons:commons-pool2:$version_apache_commons_pool2"
                implementation "org.xerial:sqlite-jdbc:$version_sqlite_jdbc"
                implementation "org.apache.commons:commons-dbcp2:$version_apache_commons_dbcp2"

                implementation "javax.ws.rs:javax.ws.rs-api:2.1"
                implementation "org.glassfish.jersey.media:jersey-media-multipart:$version_jersey"
            }
        }

        jvmTest {
            dependencies {
                implementation "junit:junit:$version_junit"
                implementation project(":lib-database2")
            }
        }
    }
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/jvmTest/resources"
    into "${buildDir}/classes/kotlin/test"
}



//compileTestJava {
//    /*
//     *  Annotation processor arguments:
//     *   umdb_room_out - Destination directory for the generated room version of database and DAO classes
//     *
//     *   If desired for to enable debugging of generated sources in intellij, output can be changed to
//     *   a directory ( e.g. $projectDir/tmp/java instead of filer ), and then that directory can be
//     *   added to the test sources ( e.g. sourceSets.test.java += ["$projectDir/tmp/java"] )
//     */
//    options.compilerArgs += [
//            "-Aumdb_jdbc_out=filer",
//            "-Aumdb_jersey_res_out=filer",
//            "-Aumdb_retrofit_out=filer"
//    ]
//
//    //Due to a bug, the JDK8 annotation processor provides incorrect parameter names, thus we need
//    // to use JDK9+ to run the annotation processor https://bugs.openjdk.java.net/browse/JDK-8191074
//    if(JavaVersion.current() == JavaVersion.VERSION_1_8) {
//        options.fork = true
//        options.forkOptions.executable = rootProject.ext.localProperties["javac.9plus"]
//    }
//}

//compileKotlin {
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//}
//
//compileTestKotlin {
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//}

kapt {
    arguments {
        arg("door_jdbc_kt_out", "filer")
    }
}

//sourceSets.test.java.srcDirs += ["$projectDir/tmp/java"]
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Test implementation of Postgres
    testImplementation "org.postgresql:postgresql:$version_postgres_jdbc"

    kaptTest project(":lib-database-annotation-processor")
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId rootProject.group
            artifactId project.name
            version rootProject.version

            from components.java

            artifact sourceJar {
                classifier = 'sources'
            }
        }
    }

    repositories {
        maven {
            url rootProject.ext.buildConfigProperties['repo.dir']
        }
    }
}

