
plugins {
    id 'org.jetbrains.kotlin.multiplatform'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

group rootProject.group
version rootProject.version

kotlin {
    jvm {
        compilations.main.kotlinOptions {
            // Setup the Kotlin compiler options for the 'main' compilation:
            jvmTarget = "$version_kotlin_jvmTarget"
        }

        compilations.test.kotlinOptions {
            // Setup the Kotlin compiler options for the 'main' compilation:
            jvmTarget = "$version_kotlin_jvmTarget"
        }
    }

    js {
        nodejs()

        compilations.main.kotlinOptions {
            metaInfo = true
            sourceMap = true
            moduleKind = "commonjs"
        }
    }


    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$version_kotlin"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$version_coroutines"
                implementation project(":lib-database")
                implementation project(":lib-database-entities")
                implementation project(":lib-door-runtime")
                implementation project(":lib-room-annotations")
            }
        }

        jvmMain {
            kotlin.srcDir("build/generated/source/door")


            dependencies {
                implementation project(":lib-database")
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"
                implementation project(":lib-room-annotations")
            }
        }

        jsMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$version_kotlin"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:$version_coroutines"
            }
        }
    }

}

assemble.dependsOn(":lib-database:build")

/**
 * Prepare details to be used when creating package.json file
 */
task preparePackageJsonFile{
    doLast {
        preparePackageJsonFile.ext.config = configurations
        preparePackageJsonFile.ext.name = "${rootProject.name}-${project.name}"
    }
}
preparePackageJsonFile.dependsOn(build)
